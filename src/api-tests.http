# Hono.js API Routing Demo - HTTP Tests

# Base URL
@baseUrl = http://localhost:3000

### Root endpoint
GET {{baseUrl}}/

//Metrics endpoint
###
GET {{baseUrl}}/metrics

//API DOCUMENTATION ENDPOINT
###
GET {{baseUrl}}/api



# AUTH TESTING 

### User Registration
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "first_name": "Test1",
  "last_name": "User1",
  "phone_number": "0712345678",
  "email": "faith@gmail.com",
  "password": "password123"
}


### Login to get a token for authenticated requests
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "amrt@254.gmail.com",
  "password": "Amrit"
}



###//Login for a normal user
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "kie@gmail.com",
  "password": "password123"
}


//Login for an updated user(Admin)
###
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "amritkhari254@gmail.com",
  "password": "Vans1"
}




###
# USER 

GET {{baseUrl}}/api/users
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo4LCJmaXJzdF9uYW1lIjoiRXZhbnMiLCJsYXN0X25hbWUiOiJLYXJpdWtpIiwiZW1haWwiOiJhbXJ0QDI1NC5nbWFpbC5jb20iLCJ1c2VyX3R5cGUiOiJhZG1pbiIsImlhdCI6MTc2MTY3NjgyNywiZXhwIjoxNzYxNjgwNDI3fQ.pq5fbCOiIZ4T3F1VjESK3VYsVoUej-uWmnvGjmGs-Rg
### Get user by ID
GET {{baseUrl}}/api/users/4

### Create a new user
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "first_name": "Denver",
  "last_name": "254",
  "email": "amritkhatri254@.gmail.com",
  "phone_number": "01121746838",
  "password": "Denver",
  "user_type": "admin"
}



### Update user
PUT {{baseUrl}}/api/users/1
Content-Type: application/json

{
  "first_name": "Amrit",
  "last_name": "Kariuki",
  "email": "amritkhari254@gmail.com",
  "phone_number": "012178578",
  "password": "Vans1"
}

//Trying updating multiple users
###
PUT {{baseUrl}}/api/users
Content-Type: application/json

[
  {
    "user_id": 1,
    "first_name": "Amrit",
    "last_name": "Kariuki",
    "email": "amritkhari254@gmail.com",
    "phone_number": "012178578",
    "password": "Vans1"
  },
  {
    "user_id": 2,
    "first_name": "Kie",
    "last_name": "Brown",
    "email": "kie@gmail.com",
    "phone_number": "0712345678",
    "password": "Kie123"
  }
]


### Delete user
DELETE {{baseUrl}}/api/users/14



























# =TODO TESTING 

# = Get all todos
###
GET {{baseUrl}}/api/todos
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJmaXJzdF9uYW1lIjoiQW1yaXQiLCJsYXN0X25hbWUiOiJLYXJpdWtpIiwiZW1haWwiOiJhbXJpdGtoYXJpMjU0QGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6ImFkbWluIiwiaWF0IjoxNzYxNjc2OTYyLCJleHAiOjE3NjE2ODA1NjJ9.zYnsRWuDKJSGzFM2ml29f0tV8dA9kwmqbqKI6Wwl-5M
# == Get todo by ID
###
GET {{baseUrl}}/api/todos/6

#  Create a new todo
###
POST {{baseUrl}}/api/todos
Content-Type: application/json

{
  "todo_name": "New Todo 22",
  "description": "This is a new todo",
  "due_date": "2024-12-31",
  "user_id": 4
}

#==== Update todo
###
PUT {{baseUrl}}/api/todos/11
Content-Type: application/json

{
  "todo_name": "New Todo 111133",
  "description": "This is a new todo 111133",
  "due_date": "2025-12-31",
  "user_id": 4
}

# == Delete todo
###
DELETE {{baseUrl}}/api/todos/12
